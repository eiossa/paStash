{
  "_args": [
    [
      "vows-batch-retry@0.0.4",
      "/home/enrico/pastash"
    ]
  ],
  "_from": "vows-batch-retry@0.0.4",
  "_id": "vows-batch-retry@0.0.4",
  "_inCache": true,
  "_installable": true,
  "_location": "/vows-batch-retry",
  "_npmUser": {
    "email": "bertrand.paquet@gmail.com",
    "name": "bpaquet"
  },
  "_npmVersion": "1.2.18",
  "_phantomChildren": {
    "diff": "1.0.8",
    "eyes": "0.1.8"
  },
  "_requested": {
    "name": "vows-batch-retry",
    "raw": "vows-batch-retry@0.0.4",
    "rawSpec": "0.0.4",
    "scope": null,
    "spec": "0.0.4",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/vows-batch-retry/-/vows-batch-retry-0.0.4.tgz",
  "_shasum": "808790ef4bace9be1a5b7c8540b40ba2251725e9",
  "_shrinkwrap": null,
  "_spec": "vows-batch-retry@0.0.4",
  "_where": "/home/enrico/pastash",
  "author": {
    "email": "bertrand.paquet@gmail.com",
    "name": "Bertrand Paquet"
  },
  "bugs": {
    "url": "https://github.com/bpaquet/vows-batch-retry/issues"
  },
  "dependencies": {
    "vows": "0.7.0"
  },
  "description": "Add on to vows to add addBatchRetry command",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "808790ef4bace9be1a5b7c8540b40ba2251725e9",
    "tarball": "https://registry.npmjs.org/vows-batch-retry/-/vows-batch-retry-0.0.4.tgz"
  },
  "homepage": "https://github.com/bpaquet/vows-batch-retry",
  "keywords": [
    "bdd",
    "retry",
    "vows"
  ],
  "licenses": [
    {
      "type": "Apache2",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  ],
  "main": "./lib/vows-batch-retry.js",
  "maintainers": [
    {
      "name": "bpaquet",
      "email": "bertrand.paquet@gmail.com"
    }
  ],
  "name": "vows-batch-retry",
  "optionalDependencies": {},
  "readme": "vows-batch-retry\n================\n\n[![Build Status](https://travis-ci.org/bpaquet/vows-batch-retry.png?branch=master)](https://travis-ci.org/bpaquet/vows-batch-retry)\n\nAdd a ``addBatchRetry`` command to [vows](http://vowsjs.org/), for tests which involved lot of external components, and which can failed\nsometimes.\n\n## How to use it ?\n\n```js\nvar vows = require('vows-batch-retry'),\n    assert = require('assert');\n\nvows.describe('test if').addBatchRetry({\n  'random number': {\n    topic: function() {\n      return Math.random();\n    },\n    'is upper 0.7': function(x) {\n      assert(x > 0.7);\n    }\n  }\n}, 10).export(module);\n\n```\n\n10 is the number of retry. When the test is ok, next try are ignored.\n\nExample of output\n```\n$ node_modules/.bin/vows  random.js --spec\n \n  ♢ test if \n  \nTest failed 'random number' with exception, retrying. { name: 'AssertionError',\n  actual: false,\n  expected: true,\n  operator: '==',\n  message: 'false == true' }\n  random number[try 1/10]\n    ✓ is upper 0.7\nTest failed 'random number' with exception, retrying. { name: 'AssertionError',\n  actual: false,\n  expected: true,\n  operator: '==',\n  message: 'false == true' }\n  random number[try 2/10]\n    ✓ is upper 0.7\nTest failed 'random number' with exception, retrying. { name: 'AssertionError',\n  actual: false,\n  expected: true,\n  operator: '==',\n  message: 'false == true' }\n  random number[try 3/10]\n    ✓ is upper 0.7\n  random number[try 4/10]\n    ✓ is upper 0.7\n  random number[try 5/10]\n    ✓ is upper 0.7\n  random number[try 6/10]\n    ✓ is upper 0.7\n  random number[try 7/10]\n    ✓ is upper 0.7\n  random number[try 8/10]\n    ✓ is upper 0.7\n  random number[try 9/10]\n    ✓ is upper 0.7\n  random number[try 10/10]\n    ✓ is upper 0.7\n \n✓ OK » 10 honored (0.011s) \n\n```\n\nThis test is ok after 3 tries.\n\n## Async tests\n\nAfter the number of tries, you can specify the test timeout. Default value is 2000 ms.\n\nExample :\n```js\nvar vows = require('vows-batch-retry'),\n    assert = require('assert');\n\nvows.describe('test if').addBatchRetry({\n  'random number': {\n    topic: function() {\n      var callback = this.callback;\n      setTimeout(function() {\n        callback(null, \"value\");\n      }, Math.random() * 500)\n    },\n    'is lower than 0.5, with a setTimeout call': function(x) {\n      assert.equal(\"value\", x);\n    }\n  }\n}, 10, 250).export(module);\n\n```\n\nExample of output :\n```\nnode_modules/.bin/vows  random-async.js --spec\n \n  ♢ test if \n  \nTest failed 'random number' with topic timeout, retrying.\n  random number[try 1/10]\n    ✓ is lower than 0.5, with a setTimeout call\nTest failed 'random number' with topic timeout, retrying.\n  random number[try 2/10]\n    ✓ is lower than 0.5, with a setTimeout call\n  random number[try 3/10]\n    ✓ is lower than 0.5, with a setTimeout call\n  random number[try 4/10]\n    ✓ is lower than 0.5, with a setTimeout call\n  random number[try 5/10]\n    ✓ is lower than 0.5, with a setTimeout call\n  random number[try 6/10]\n    ✓ is lower than 0.5, with a setTimeout call\n  random number[try 7/10]\n    ✓ is lower than 0.5, with a setTimeout call\n  random number[try 8/10]\n    ✓ is lower than 0.5, with a setTimeout call\n  random number[try 9/10]\n    ✓ is lower than 0.5, with a setTimeout call\n  random number[try 10/10]\n    ✓ is lower than 0.5, with a setTimeout call\n \n✓ OK » 10 honored (0.820s) \n```\n\nThis test is ok after 2 tries.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/bpaquet/vows-batch-retry.git"
  },
  "scripts": {
    "test": "./test-runner.sh"
  },
  "version": "0.0.4"
}
